<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nix.cinema.dao.TicketMapper">
    <resultMap id="BaseResultMap" type="com.nix.cinema.model.TicketModel">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="updateDate" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="ticketSn" property="ticketSn" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="room" property="room" jdbcType="VARCHAR"/>
        <result column="ticketSum" property="ticketSum" jdbcType="INTEGER"/>
        <result column="sellSn" property="sellSn" jdbcType="VARCHAR"/>
        <association property="cinema" column="cinema" select="com.nix.cinema.dao.CinemaMapper.selectLazy"/>
        <association property="movie" column="movie" select="com.nix.cinema.dao.MovieMapper.selectLazy"/>
        <association property="member" column="member" select="com.nix.cinema.dao.MemberMapper.selectLazy"/>
    </resultMap>
    <insert id="insert" parameterType="com.nix.cinema.model.TicketModel">
        insert into `ticket`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="createDate != null">
                `createDate`,
            </if>
            <if test="updateDate != null">
                `updateDate`,
            </if>
            <if test="ticketSn != null">
                `ticketSn`,
            </if>
            <if test="price != null">
                `price`,
            </if>
            <if test="room != null">
                `room`,
            </if>
            <if test="ticketSum != null">
                `ticketSum`,
            </if>
            <if test="sellSn != null">
                `sellSn`,
            </if>
            <if test="cinema != null">
                `cinema`,
            </if>
            <if test="movie != null">
                `movie`,
            </if>
            <if test="member != null">
            `member`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
             <if test="id != null">
                #{id,jdbcType=INTEGER},
             </if>
             <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
             </if>
             <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
             </if>
             <if test="ticketSn != null">
                #{ticketSn,jdbcType=VARCHAR},
             </if>
             <if test="price != null">
                #{price,jdbcType=DECIMAL},
             </if>
             <if test="room != null">
                #{room,jdbcType=VARCHAR},
             </if>
             <if test="ticketSum != null">
                #{ticketSum,jdbcType=INTEGER},
             </if>
             <if test="sellSn != null">
                #{sellSn,jdbcType=VARCHAR},
             </if>
            <if test="cinema != null">
                #{cinema.id,jdbcType=INTEGER},
            </if>
            <if test="movie != null">
                #{movie.id,jdbcType=INTEGER},
            </if>
            <if test="member != null">
                #{member.id,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <delete id="delete" parameterType="java.lang.Integer">
        delete  from `ticket` where id = #{id,jdbcType=INTEGER}
    </delete>
    <update id="update" parameterType="com.nix.cinema.model.TicketModel">
        update `ticket`
        set
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="id != null">
                `id` = #{id,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                `createDate` = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                `updateDate` = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="ticketSn != null">
                `ticketSn` = #{ticketSn,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                `price` = #{price,jdbcType=DECIMAL},
            </if>
            <if test="room != null">
                `room` = #{room,jdbcType=VARCHAR},
            </if>
            <if test="ticketSum != null">
                `ticketSum` = #{ticketSum,jdbcType=INTEGER},
            </if>
            <if test="sellSn != null">
                `sellSn` = #{sellSn,jdbcType=VARCHAR},
            </if>
            <if test="cinema != null">
                `cinema` = #{cinema.id,jdbcType=INTEGER},
            </if>
            <if test="movie != null">
                `movie` = #{movie.id,jdbcType=INTEGER},
            </if>
            <if test="member != null">
                `member` = #{member.id,jdbcType=INTEGER},
            </if>
        </trim>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="select" parameterType="int" resultMap="BaseResultMap">
        select * from `ticket` where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="maxId" resultType="Integer">
        select max(`id`) from `ticket`;
    </select>

    <select id="count" resultType="Long">
        select count(`id`) from `ticket`;
    </select>

    <select id="findByOneField" resultMap="BaseResultMap">
        select * from `ticket` where `${field}` = #{value,jdbcType=INTEGER}
    </select>

    <select id="list" resultMap="BaseResultMap">
        select * from `ticket`
        <if test="conditions != null">
            where ${conditions}
        </if>
        <if test="order != null and sort != null">
            order by ${order} ${sort}
        </if>
        <if test="offset != null">
            limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
        </if>
    </select>
</mapper>
